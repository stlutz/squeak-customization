name: Build OpenSmallalk VM

on:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.arch }}
    runs-on: ${{ matrix.dist }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
         # - dist: ubuntu-latest
         #   arch: linux64x64
         #   bits: 64
         #   shell: bash
          - dist: windows-latest
            arch: win64x64
            bits: 64
            mingw_arch: x86_64
            cyg_root: C:\cygwin64
            shell: C:\cygwin64\bin\bash {0}
    
    env:
      ARCH: ${{ matrix.arch }}
      FLAVOR: squeak.cog.spur
      ARTIFACT_NAME: ${{ matrix.arch }}
    
    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
      - name: Checkout repository OpenSmalltalk/opensmalltalk-vm
        uses: actions/checkout@v2
        with:
          repository: 'OpenSmalltalk/opensmalltalk-vm'
          ref: '9f1b4644e7396e473bd9bb4cf67f8a9d5a4e11d6'
      
      - name: Reuse Cygwin from Cache (Windows)
        id: cygwin-cache
        if: startsWith(matrix.arch, 'win')
        uses: actions/cache@v2
        with:
          path: ${{ matrix.cyg_root }}
          key: cygwin-${{ matrix.arch }}
        
      - name: Install Cygwin (Windows)
        if: startsWith(matrix.arch, 'win')
        shell: bash
        run: |
          curl -fsSL --retry 4 -m 600 -o "setup-x86.exe" "http://cygwin.com/setup-x86.exe"
          curl -fsSL --retry 4 -m 600 -o "setup-x86_64.exe" "http://cygwin.com/setup-x86_64.exe"
      
      - name: Install dependencies (Windows)
        if: ${{ startsWith(matrix.arch, 'win') && !steps.cygwin-cache.outputs.cache-hit }}
        shell: cmd
        run: call scripts/installCygwin.bat ${{ matrix.mingw_arch }} ${{ matrix.cyg_root }}

      - name: Install dependencies (Linux)
        if: ${{ startsWith(matrix.arch, 'win') && !steps.cygwin-cache.outputs.cache-hit }}
        run: ./scripts/ci/travis_install.sh
      
      - name: Run source tree version substitutions
        run: ./scripts/updateSCCSVersions
      
      - name: Run "make config" in platforms/unix/config ...
        working-directory: ./platforms/unix/config/
        run: make configure
      
      - name: Make VM
        working-directory: ./build.${{ env.ARCH }}/${{ env.FLAVOR }}/build/
        run: echo "n" | ./mvm
      
      - name: Pack VM
        working-directory: ./products
        run: tar --create --gzip --file="${{ env.ARTIFACT_NAME }}.tar.gz" * #./sqcogspur${{ matrix.bits }}linuxht/
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./products/${{ env.ARTIFACT_NAME }}.tar.gz
      
      - name: Setup hpi-swa/smalltalkCI
        uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: Squeak${{ matrix.bits }}-trunk
      
      - name: Run tests
        continue-on-error: true
        if: startsWith(matrix.arch, 'linux')
        run: smalltalkci -s Squeak${{ matrix.bits }}-trunk --vm ./products/sqcogspur${{ matrix.bits }}linuxht/bin/squeak ./tests/smalltalk.ston
